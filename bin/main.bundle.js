/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};

/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {

/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;

/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};

/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);

/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;

/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}


/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;

/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;

/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";

/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ function(module, exports) {

	eval("window.onload = function () {\n    function Snake(options) {\n        var me = this;\n        var x = options.x || 0;\n        var y = options.y || 0;\n        var tail = new SnakeSegment({\n            isTail: true,\n            x: x,\n            y: y\n        });\n        var body = new SnakeSegment({\n            x: tail.x + SEGMENT_SIZE,\n            y: tail.y + SEGMENT_SIZE\n        });\n        var head = new SnakeSegment({\n            isHead: true,\n            x: body.x + SEGMENT_SIZE,\n            y: body.y + SEGMENT_SIZE\n        });\n\n        me.ctx = options.ctx;\n\n        tail.next = body;\n        body.prev = tail;\n        body.next = head;\n        head.prev = body;\n\n        me.head = head;\n        me.tail = tail;\n    }\n\n    Snake.prototype.drawAll = function drawAll() {\n        var me = this;\n        var segment = me.tail;\n        segment.draw(me.ctx);\n        while (segment.next) {\n            segment = segment.next;\n            segment.draw(me.ctx);\n        }\n    };\n\n    function SnakeSegment(options) {\n        var me = this;\n\n        me.width = SEGMENT_SIZE;\n        me.height = SEGMENT_SIZE;\n        me.fill = \"blue\";\n        me.isTail = options.isTail || false;\n        me.isHead = options.isHead || false;\n        me.next = options.next || null;\n        me.prev = options.prev || null;\n        me.x = options.x;\n        me.y = options.y;\n    }\n\n    SnakeSegment.prototype.updatePos = function updatePos(x, y) {\n        this.x = x;\n        this.y = y;\n    };\n\n    SnakeSegment.prototype.draw = function draw(canvasContext) {\n        var me = this;\n        canvasContext.fillRect(me.x, me.y, me.width, me.height);\n    };\n\n    SnakeSegment.prototype.clear = function clear(canvasContext) {\n        var me = this;\n        canvasContext.clearRect(me.x, me.y, me.width, me.height);\n    };\n\n    SnakeSegment.prototype.drawNext = function drawNext(headSegment, direction) {\n        var me = this;\n        me.isHead = true;\n    };\n\n    const canvasWidth = 1500;\n    const canvasHeight = 1500;\n    var SEGMENT_SIZE = 20;\n    var FPS = 60;\n    var gameLoop;\n    console.log(\"GOGOGOGO\");\n    var gameRunning = true;\n    document.addEventListener('keydown', function (event) {\n        if (event.keyCode == 37) {\n            alert('Left was pressed');\n            clearInterval(gameLoop);\n        } else if (event.keyCode == 39) {\n            alert('Right was pressed');\n        }\n    });\n\n    var canvasEl = document.getElementById('main');\n    canvasEl.style.backgroundColor = 'rgba(158, 167, 184, 0.2)';\n    canvasEl.width = canvasWidth;\n    canvasEl.height = canvasHeight;\n    var ctx = canvasEl.getContext('2d');\n    var snake = new Snake({\n        x: canvasWidth / 2,\n        y: canvasHeight / 2,\n        ctx: ctx\n    });\n\n    gameLoop = setInterval(snake.drawAll(), 1000 / FPS);\n};//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9hcHAuanM/ZDhlZSJdLCJuYW1lcyI6WyJ3aW5kb3ciLCJvbmxvYWQiLCJTbmFrZSIsIm9wdGlvbnMiLCJtZSIsIngiLCJ5IiwidGFpbCIsIlNuYWtlU2VnbWVudCIsImlzVGFpbCIsImJvZHkiLCJTRUdNRU5UX1NJWkUiLCJoZWFkIiwiaXNIZWFkIiwiY3R4IiwibmV4dCIsInByZXYiLCJwcm90b3R5cGUiLCJkcmF3QWxsIiwic2VnbWVudCIsImRyYXciLCJ3aWR0aCIsImhlaWdodCIsImZpbGwiLCJ1cGRhdGVQb3MiLCJjYW52YXNDb250ZXh0IiwiZmlsbFJlY3QiLCJjbGVhciIsImNsZWFyUmVjdCIsImRyYXdOZXh0IiwiaGVhZFNlZ21lbnQiLCJkaXJlY3Rpb24iLCJjYW52YXNXaWR0aCIsImNhbnZhc0hlaWdodCIsIkZQUyIsImdhbWVMb29wIiwiY29uc29sZSIsImxvZyIsImdhbWVSdW5uaW5nIiwiZG9jdW1lbnQiLCJhZGRFdmVudExpc3RlbmVyIiwiZXZlbnQiLCJrZXlDb2RlIiwiYWxlcnQiLCJjbGVhckludGVydmFsIiwiY2FudmFzRWwiLCJnZXRFbGVtZW50QnlJZCIsInN0eWxlIiwiYmFja2dyb3VuZENvbG9yIiwiZ2V0Q29udGV4dCIsInNuYWtlIiwic2V0SW50ZXJ2YWwiXSwibWFwcGluZ3MiOiJBQUFBQSxPQUFPQyxNQUFQLEdBQWdCLFlBQVc7QUFDdkIsYUFBU0MsS0FBVCxDQUFlQyxPQUFmLEVBQXdCO0FBQ3BCLFlBQUlDLEtBQUssSUFBVDtBQUNBLFlBQUlDLElBQUlGLFFBQVFFLENBQVIsSUFBYSxDQUFyQjtBQUNBLFlBQUlDLElBQUlILFFBQVFHLENBQVIsSUFBYSxDQUFyQjtBQUNBLFlBQUlDLE9BQU8sSUFBSUMsWUFBSixDQUFpQjtBQUN4QkMsb0JBQVEsSUFEZ0I7QUFFeEJKLGVBQUdBLENBRnFCO0FBR3hCQyxlQUFHQTtBQUhxQixTQUFqQixDQUFYO0FBS0EsWUFBSUksT0FBTyxJQUFJRixZQUFKLENB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QUFlLElBQXJCO0FBQ0EsUUFBSXRCLGVBQWUsRUFBbkI7QUFDQSxRQUFJdUIsTUFBTSxFQUFWO0FBQ0EsUUFBSUMsUUFBSjtBQUNBQyxZQUFRQyxHQUFSLENBQVksVUFBWjtBQUNBLFFBQUlDLGNBQWMsSUFBbEI7QUFDQUMsYUFBU0MsZ0JBQVQsQ0FBMEIsU0FBMUIsRUFBcUMsVUFBU0MsS0FBVCxFQUFnQjtBQUNqRCxZQUFHQSxNQUFNQyxPQUFOLElBQWlCLEVBQXBCLEVBQXdCO0FBQ3BCQyxrQkFBTSxrQkFBTjtBQUNBQywwQkFBY1QsUUFBZDtBQUNILFNBSEQsTUFJSyxJQUFHTSxNQUFNQyxPQUFOLElBQWlCLEVBQXBCLEVBQXdCO0FBQ3pCQyxrQkFBTSxtQkFBTjtBQUNIO0FBQ0osS0FSRDs7QUFVQSxRQUFJRSxXQUFXTixTQUFTTyxjQUFULENBQXdCLE1BQXhCLENBQWY7QUFDQUQsYUFBU0UsS0FBVCxDQUFlQyxlQUFmLEdBQWlDLDBCQUFqQztBQUNBSCxhQUFTeEIsS0FBVCxHQUFpQlcsV0FBakI7QUFDQWEsYUFBU3ZCLE1BQVQsR0FBa0JXLFlBQWxCO0FBQ0EsUUFBSW5CLE1BQU0rQixTQUFTSSxVQUFULENBQW9CLElBQXBCLENBQVY7QUFDQSxRQUFJQyxRQUFRLElBQUloRCxLQUFKLENBQVU7QUFDbEJHLFdBQUcyQixjQUFZLENBREc7QUFFbEIxQixXQUFHMkIsZUFBYSxDQUZFO0FBR2xCbkIsYUFBS0E7QUFIYSxLQUFWLENBQVo7O0FBTUFxQixlQUFXZ0IsWUFBWUQsTUFBTWhDLE9BQU4sRUFBWixFQUE2QixPQUFPZ0IsR0FBcEMsQ0FBWDtBQUNILENBekdEIiwiZmlsZSI6IjAuanMiLCJzb3VyY2VzQ29udGVudCI6WyJ3aW5kb3cub25sb2FkID0gZnVuY3Rpb24oKSB7XHJcbiAgICBmdW5jdGlvbiBTbmFrZShvcHRpb25zKSB7XHJcbiAgICAgICAgdmFyIG1lID0gdGhpczsgICBcclxuICAgICAgICB2YXIgeCA9IG9wdGlvbnMueCB8fCAwO1xyXG4gICAgICAgIHZhciB5ID0gb3B0aW9ucy55IHx8IDA7XHJcbiAgICAgICAgdmFyIHRhaWwgPSBuZXcgU25ha2VTZWdtZW50KHtcclxuICAgICAgICAgICAgaXNUYWlsOiB0cnVlLFxyXG4gICAgICAgICAgICB4OiB4LFxyXG4gICAgICAgICAgICB5OiB5XHJcbiAgICAgICAgfSk7XHJcbiAgICAgICAgdmFyIGJvZHkgPSBuZXcgU25ha2VTZWdtZW50KHtcclxuICAgICAgICAgICAgeDogdGFpbC54K1NFR01FTlRfU0laRSxcclxuICAgICAgICAgICAgeTogdGFpbC55K1NFR01FTlRfU0laRSxcclxuICAgICAgICB9KTtcclxuICAgICAgICB2YXIgaGVhZCA9IG5ldyBTbmFrZVNlZ21lbnQoe1xyXG4gICAgICAgICAgICBpc0hlYWQ6IHRydWUsXHJcbiAgICAgICAgICAgIHg6IGJvZHkueCtTRUdNRU5UX1NJWkUsXHJcbiAgICAgICAgICAgIHk6IGJvZHkueStTRUdNRU5UX1NJWkUsXHJcbiAgICAgICAgfSk7XHJcblxyXG4gICAgICAgIG1lLmN0eCA9IG9wdGlvbnMuY3R4O1xyXG4gICAgICAgIFxyXG4gICAgICAgIHRhaWwubmV4dCA9IGJvZHk7XHJcbiAgICAgICAgYm9keS5wcmV2ID0gdGFpbDtcclxuICAgICAgICBib2R5Lm5leHQgPSBoZWFkO1xyXG4gICAgICAgIGhlYWQucHJldiA9IGJvZHk7XHJcbiAgICAgICAgXHJcbiAgICAgICAgbWUuaGVhZCA9IGhlYWQ7XHJcbiAgICAgICAgbWUudGFpbCA9IHRhaWw7XHJcbiAgICB9XHJcblxyXG4gICAgU25ha2UucHJvdG90eXBlLmRyYXdBbGwgPSBmdW5jdGlvbiBkcmF3QWxsKCkge1xyXG4gICAgICAgIHZhciBtZSA9IHRoaXM7XHJcbiAgICAgICAgdmFyIHNlZ21lbnQgPSBtZS50YWlsO1xyXG4gICAgICAgIHNlZ21lbnQuZHJhdyhtZS5jdHgpO1xyXG4gICAgICAgIHdoaWxlKHNlZ21lbnQubmV4dCkge1xyXG4gICAgICAgICAgICBzZWdtZW50ID0gc2VnbWVudC5uZXh0O1xyXG4gICAgICAgICAgICBzZWdtZW50LmRyYXcobWUuY3R4KTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG5cclxuICAgIGZ1bmN0aW9uIFNuYWtlU2VnbWVudChvcHRpb25zKSB7XHJcbiAgICAgICAgdmFyIG1lID0gdGhpcztcclxuXHJcbiAgICAgICAgbWUud2lkdGggPSBTRUdNRU5UX1NJWkU7XHJcbiAgICAgICAgbWUuaGVpZ2h0ID0gU0VHTUVOVF9TSVpFO1xyXG4gICAgICAgIG1lLmZpbGwgPSBcImJsdWVcIjtcclxuICAgICAgICBtZS5pc1RhaWwgPSBvcHRpb25zLmlzVGFpbCB8fCBmYWxzZTtcclxuICAgICAgICBtZS5pc0hlYWQgPSBvcHRpb25zLmlzSGVhZCB8fCBmYWxzZTtcclxuICAgICAgICBtZS5uZXh0ID0gb3B0aW9ucy5uZXh0IHx8IG51bGw7XHJcbiAgICAgICAgbWUucHJldiA9IG9wdGlvbnMucHJldiB8fCBudWxsO1xyXG4gICAgICAgIG1lLnggPSBvcHRpb25zLng7XHJcbiAgICAgICAgbWUueSA9IG9wdGlvbnMueTtcclxuICAgIH1cclxuXHJcbiAgICBTbmFrZVNlZ21lbnQucHJvdG90eXBlLnVwZGF0ZVBvcyA9IGZ1bmN0aW9uIHVwZGF0ZVBvcyh4LCB5KSB7XHJcbiAgICAgICAgdGhpcy54ID0geDtcclxuICAgICAgICB0aGlzLnkgPSB5O1xyXG4gICAgfTtcclxuXHJcbiAgICBTbmFrZVNlZ21lbnQucHJvdG90eXBlLmRyYXcgPSBmdW5jdGlvbiBkcmF3KGNhbnZhc0NvbnRleHQpIHtcclxuICAgICAgICB2YXIgbWUgPSB0aGlzO1xyXG4gICAgICAgIGNhbnZhc0NvbnRleHQuZmlsbFJlY3QobWUueCwgbWUueSwgbWUud2lkdGgsIG1lLmhlaWdodCk7XHJcbiAgICB9XHJcblxyXG4gICAgU25ha2VTZWdtZW50LnByb3RvdHlwZS5jbGVhciA9IGZ1bmN0aW9uIGNsZWFyKGNhbnZhc0NvbnRleHQpIHtcclxuICAgICAgICB2YXIgbWUgPSB0aGlzO1xyXG4gICAgICAgIGNhbnZhc0NvbnRleHQuY2xlYXJSZWN0KG1lLngsIG1lLnksIG1lLndpZHRoLCBtZS5oZWlnaHQpO1xyXG4gICAgfVxyXG5cclxuICAgIFNuYWtlU2VnbWVudC5wcm90b3R5cGUuZHJhd05leHQgPSBmdW5jdGlvbiBkcmF3TmV4dChoZWFkU2VnbWVudCwgZGlyZWN0aW9uKSB7XHJcbiAgICAgICAgdmFyIG1lID0gdGhpcztcclxuICAgICAgICBtZS5pc0hlYWQgPSB0cnVlO1xyXG4gICAgfVxyXG5cclxuICAgIGNvbnN0IGNhbnZhc1dpZHRoID0gMTUwMDtcclxuICAgIGNvbnN0IGNhbnZhc0hlaWdodCA9IDE1MDA7XHJcbiAgICB2YXIgU0VHTUVOVF9TSVpFID0gMjBcclxuICAgIHZhciBGUFMgPSA2MDtcclxuICAgIHZhciBnYW1lTG9vcDtcclxuICAgIGNvbnNvbGUubG9nKFwiR09HT0dPR09cIik7XHJcbiAgICB2YXIgZ2FtZVJ1bm5pbmcgPSB0cnVlO1xyXG4gICAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcigna2V5ZG93bicsIGZ1bmN0aW9uKGV2ZW50KSB7XHJcbiAgICAgICAgaWYoZXZlbnQua2V5Q29kZSA9PSAzNykge1xyXG4gICAgICAgICAgICBhbGVydCgnTGVmdCB3YXMgcHJlc3NlZCcpO1xyXG4gICAgICAgICAgICBjbGVhckludGVydmFsKGdhbWVMb29wKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZSBpZihldmVudC5rZXlDb2RlID09IDM5KSB7XHJcbiAgICAgICAgICAgIGFsZXJ0KCdSaWdodCB3YXMgcHJlc3NlZCcpO1xyXG4gICAgICAgIH1cclxuICAgIH0pO1xyXG5cclxuICAgIHZhciBjYW52YXNFbCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdtYWluJyk7XHJcbiAgICBjYW52YXNFbC5zdHlsZS5iYWNrZ3JvdW5kQ29sb3IgPSAncmdiYSgxNTgsIDE2NywgMTg0LCAwLjIpJztcclxuICAgIGNhbnZhc0VsLndpZHRoID0gY2FudmFzV2lkdGg7XHJcbiAgICBjYW52YXNFbC5oZWlnaHQgPSBjYW52YXNIZWlnaHQ7XHJcbiAgICB2YXIgY3R4ID0gY2FudmFzRWwuZ2V0Q29udGV4dCgnMmQnKTtcclxuICAgIHZhciBzbmFrZSA9IG5ldyBTbmFrZSh7XHJcbiAgICAgICAgeDogY2FudmFzV2lkdGgvMixcclxuICAgICAgICB5OiBjYW52YXNIZWlnaHQvMixcclxuICAgICAgICBjdHg6IGN0eFxyXG4gICAgfSk7XHJcblxyXG4gICAgZ2FtZUxvb3AgPSBzZXRJbnRlcnZhbChzbmFrZS5kcmF3QWxsKCksIDEwMDAgLyBGUFMpO1xyXG59O1xuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyAuL2FwcC5qcyJdLCJzb3VyY2VSb290IjoiIn0=");

/***/ }
/******/ ]);